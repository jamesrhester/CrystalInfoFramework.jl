name: Run tests

on: 
  push:
    paths-ignore:
      - '.github/**'
      - 'README.md'
      
  pull_request:
    paths-ignore:
      - '.github/**'
      - 'README.md'
      
  workflow_dispatch:
  
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: ['lts', '1.11']
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
      - name: Get the cache
        uses: actions/cache@v4
        id: cache
        with:
                 path: ~/.julia
                 key: ${{ runner.os }}-${{ matrix.julia-version }}
                 
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@latest
        with:
           version: ${{ matrix.julia-version }}

      - name: Build package
        run:  |
                julia --project -e 'using Pkg; Pkg.instantiate(); Pkg.status();'

      - name: Add standard dictionaries
        uses: actions/checkout@v4
        with:
                repository: COMCIFS/cif_core
                path: test/dictionaries/core

      - name: Add magnetic dictionaries
        uses: actions/checkout@v4
        with:
                repository: COMCIFS/magnetic_dic
                path: test/dictionaries/magnetic

      - name: Add msCIF dictionaries
        uses: actions/checkout@v4
        with: 
              repository: COMCIFS/Modulated_Structures
              path: test/dictionaries/ms

      - name: Add imgCIF dictionary
        uses: actions/checkout@v4
        with:
                repository: yayahjb/cbf_imgcif_dictionary
                path: test/dictionaries/imgcif

      - name: Copy dictionaries to test directory
        run: |
            cd test/dictionaries
            mv magnetic/cif_mag.dic .
            mv core/cif_core.dic .
            mv core/ddl.dic .
            mv core/templ_enum.cif .
            mv core/templ_attr.cif .
            mv ms/cif_ms.dic .
            mv imgcif/ddl2/cif_img.dic .
            cd ../..
            
      - name: Dictionary directory contents
        run: |
                ls -l test/dictionaries

      - name: Run test no coverage
        uses: julia-actions/julia-runtest@latest
        with:
                coverage: 'false'
      - name: Do the coverage run
        if: matrix.julia-version == 'lts' && matrix.os == 'ubuntu-latest'
        uses: julia-actions/julia-runtest@latest
      - name: Process the coverage run
        if: matrix.julia-version == 'lts' && matrix.os == 'ubuntu-latest'
        run: |
                       julia -e 'using Pkg; Pkg.add("Coverage"); using Coverage; LCOV.writefile("lcov.info",process_folder())'
      - name: Upload coverage data
        if: matrix.julia-version == 'lts' && matrix.os == 'ubuntu-latest'
        uses: coverallsapp/github-action@master
        with:
              github-token: ${{ secrets.GITHUB_TOKEN }}
              path-to-lcov: './lcov.info'
      - name: Build documentation
        if: matrix.julia-version == 'lts' && matrix.os == 'ubuntu-latest'
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For authentication with GitHub Actions token
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # For authentication with SSH deploy key
        run: |
           julia --project=docs/ -e 'using Pkg; Pkg.instantiate()'
           julia --project=docs/ docs/make.jl
